"use strict";(self.webpackChunkfury_site=self.webpackChunkfury_site||[]).push([[2263],{5139:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>l});var n=a(5893),r=a(1151);const o={slug:"fury_0_4_1_release",title:"Fury 0.4.1 Released",authors:["chaokunyang"],tags:["fury"]},s=void 0,u={permalink:"/blog/fury_0_4_1_release",editUrl:"https://github.com/apache/fury-site/tree/main/i18n/en-us/docusaurus-plugin-content-blog/2023-12-09-fury_0_4_1_release.md",source:"@site/i18n/en-us/docusaurus-plugin-content-blog/2023-12-09-fury_0_4_1_release.md",title:"Fury 0.4.1 Released",description:"This release was made before Fury joined the Apache Incubator and thus it's a non-ASF release.",date:"2023-12-09T00:00:00.000Z",formattedDate:"December 9, 2023",tags:[{label:"fury",permalink:"/blog/tags/fury"}],readingTime:1.735,hasTruncateMarker:!0,authors:[{name:"Shawn Yang",title:"Apache Fury PPMC Member",url:"https://github.com/chaokunyang",imageURL:"https://github.com/chaokunyang.png",key:"chaokunyang"}],frontMatter:{slug:"fury_0_4_1_release",title:"Fury 0.4.1 Released",authors:["chaokunyang"],tags:["fury"]},unlisted:!1,prevItem:{title:"Apache Fury: A blazing fast multi-language serialization framework powered by JIT and zero-copy",permalink:"/blog/fury_blazing_fast_multiple_language_serialization_framework"},nextItem:{title:"Fury 0.4.0 Released",permalink:"/blog/fury_0_4_0_release"}},i={authorsImageUrls:[void 0]},l=[];function c(e){const t={a:"a",admonition:"admonition",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"This release was made before Fury joined the Apache Incubator and thus it's a non-ASF release."})})}),"\n",(0,n.jsxs)(t.p,{children:["I'm pleased to announce the 0.4.1 release of the Fury: ",(0,n.jsx)(t.a,{href:"https://github.com/alipay/fury/releases/tag/v0.4.1",children:"https://github.com/alipay/fury/releases/tag/v0.4.1"}),". With this release, Fury support rust row format now. C++ row format has been enhanced too, now iterable types can be encoded to fury row format. Please try it out and share your feedbacks with us."]})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>u,a:()=>s});var n=a(7294);const r={},o=n.createContext(r);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function u(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);